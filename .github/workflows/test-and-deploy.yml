name: Project Workflow

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  create:
    name: Create Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Create necessary files or placeholders
        run: |
          echo "Creating necessary environment files..."
          cp .env.example .env.testing || echo "Env file created"

  setup:
    name: Setup Dependencies
    runs-on: ubuntu-latest
    needs: create
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, bcmath, intl, sqlite
          coverage: none

      - name: Install Composer Dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --ansi

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Node.js Dependencies
        run: npm install

      - name: Build Frontend Assets
        run: npm run build

      - name: Setup Environment
        run: |
          echo "Setting up environment..."
          cp .env.testing .env
          php artisan key:generate --env=testing
          php artisan migrate --env=testing --force

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Tests with Pest
        run: ./vendor/bin/pest

  deploy:
    name: Deploy Project
    runs-on: ubuntu-latest
    needs: test
    if: success() # Condizione per eseguire il job solo se il job "test" ha successo
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Show Deploy Message
        run: echo "Deploy step executed! Add Forge or other deployment tools here."
